"""Why Use Binding in Treeview?

Binding is used in Treeview to associate specific events (like a double-click) with a custom function. For example:

    Use Case: When a user interacts with a Treeview widget (e.g., double-clicks a row), you may want to execute a function to show detailed information, process data, or perform other actions based on the selected item.
    Event Binding: The bind method connects an event (e.g., <Double-1>) to a function, allowing dynamic responses to user actions."""


# straight out of chatgpt cause I really didn't understand the que
# recommend you skip this que
# much better to do the fourth que



import tkinter as tk
from tkinter import ttk
import random

# Generate random names, father names, and email addresses
def generate_random_data(num):
    first_names = ["John", "Alice", "Robert", "Emily", "Michael", "Sophia"]
    last_names = ["Smith", "Johnson", "Brown", "Williams", "Jones", "Garcia"]
    data = []
    for _ in range(num):
        name = f"{random.choice(first_names)} {random.choice(last_names)}"
        father_name = f"{random.choice(first_names)} {random.choice(last_names)}"
        email = f"{name.replace(' ', '').lower()}@example.com"
        data.append((name, father_name, email))
    return data

# Function to display the selected row's values
def display(event):
    # Get the selected item
    selected_item = tree.focus()  # Returns the ID of the selected row
    values = tree.item(selected_item, "values")  # Extracts values of the row
    if values:
        print(f"Selected: Name: {values[0]}, Father Name: {values[1]}, Email: {values[2]}")

# Create the Tkinter application
root = tk.Tk()
root.title("Treeview with Binding")
root.geometry("600x400")

# Treeview setup
tree = ttk.Treeview(root, columns=("Name", "Father Name", "Email"), show="headings", height=20)
tree.heading("Name", text="Name")
tree.heading("Father Name", text="Father Name")
tree.heading("Email", text="Email Address")
tree.column("Name", width=180)
tree.column("Father Name", width=180)
tree.column("Email", width=220)

# Populate the treeview with random data
data = generate_random_data(50)
for name, father_name, email in data:
    tree.insert("", tk.END, values=(name, father_name, email))

# Bind the double-click event to the display function
tree.bind("<Double-1>", display)

# Pack the treeview
tree.pack(fill=tk.BOTH, expand=True)

# Run the application
root.mainloop()
